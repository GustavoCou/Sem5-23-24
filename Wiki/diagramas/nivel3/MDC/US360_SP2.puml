@startuml

participant "Angular Frontend\n(CreateRobotComponent)" as frontend
participant "HTTP Service\n(HttpRequestsService)" as httpService
participant "Toast Service\n(ToastrService)" as toastService
participant "Express App (express.ts)" as expressApp
participant "RobotRoute" as route
participant "RobotController" as controller
participant "RobotService" as service
participant "Robot (Domain Model)" as robot
participant "RobotMap" as mapper
participant "RobotRepo" as repo
participant "Robot Persistence (MongoDB Schema)" as persistence
database "MongoDB" as db

frontend -> httpService : POST Data (create robot)
activate httpService

httpService -> expressApp : POST Request (create robot)
deactivate httpService
activate expressApp


expressApp -> route : HTTP Request
deactivate expressApp
activate route

route -> controller : Delegate request
deactivate route
activate controller

controller -> service : createRobot(robotDTO)
deactivate controller
activate service

service -> robot : Create new Robot
deactivate service
activate robot

robot --> service : Robot instance / Error
deactivate robot
activate service

alt Robot creation successful
    service -> mapper : toPersistence(robot)
    deactivate service
    activate mapper
    mapper -> repo : Save Robot Data
    deactivate mapper
    activate repo
    repo -> persistence : Map Data to Schema
    deactivate repo
    activate persistence
    persistence -> db : Persist Robot
    deactivate persistence
    activate db
    db --> persistence : Success Confirmation
    deactivate db
    activate persistence
    persistence --> repo : Robot persisted
    deactivate persistence
    activate repo
    repo --> service : Success Confirmation
    deactivate repo
    activate service
    service --> controller : Robot Creation Success
    
    activate controller
    controller --> expressApp : HTTP Response (Success)
    deactivate controller
    activate expressApp
    expressApp --> httpService : Response Data
    deactivate expressApp
    activate httpService
    httpService --> toastService : Show Success Message
    deactivate httpService
    activate toastService
    toastService --> frontend : Display Toast
    deactivate toastService
    
    
else Robot creation failed
    
    service --> controller : Error Message
    deactivate service
    activate controller
    controller --> expressApp : HTTP Response (Error)
    deactivate controller
    activate expressApp
    expressApp --> httpService : Error Data
    deactivate expressApp
    activate httpService
    httpService --> toastService : Show Error Message
    deactivate httpService
    activate toastService
    toastService --> frontend : Display Toast
    deactivate toastService
end
deactivate service
deactivate controller
deactivate expressApp
deactivate httpService

@enduml
